/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: input   start ] */
kill(all)$
load(vect)$
/* example3.8.wxm */

/* */
print("Example of of transformation from rectangular to spherical")$
print("given the vector")$
print(Ax, " = ",x+y)$
print(Ay, " = ",-x+y)$
print(Az, " = ",z)$
print("Find the vector in spherical coordinates")$

print("_________________________________")$
print(" Solution")$
print("_________________________________")$
print("Express x,y,z in terms of r, theta ,phi")$
x : r * sin(theta) * cos(phi)$
y : r * sin(theta) * sin(phi)$
z : r *cos(theta)$

print("spherical to rectangular")$
print('x, " = ",x)$
print('y, " = ",y)$
print('z, " = ",z)$

print("write the vector A in rectangular coordinates")$
Ax : trigsimp(x+y) ;
Ay : trigsimp(y-x);
Az : trigsimp(z);

print("Transformation matrix s2rmat")$
r2smat :matrix([sin(theta)* cos(phi),sin(theta)*sin(phi),cos(theta)],
               [cos(theta)*cos(phi),cos(theta)*sin(phi),-sin(theta)],
               [-sin(phi),cos(phi),0]);

print("vector A in rectangular coordinates")$
Arect : [Ax,Ay,Az];

print("Transform vector A in spherical coordinates")$
print("rectangular to spherical")$
Aspher : r2smat . Arect ;
print("after semplification we recover")$
Aspher : trigsimp(Aspher);

print("_______________________________________")$
print(" same excercise but with Pauli matrices")$
print("_______________________________________")$

print("_________________________________________________________")$
print("Pauli Matrices Definition")$
print("_________________________________________________________")$

%sigma[0] : matrix([1,0],[0,1])$
%sigma[1] : matrix([0,1],[1,0])$
%sigma[2] : matrix([0,-%i],[%i,0])$
%sigma[3] : matrix([1,0],[0,-1])$

print('%sigma[0]," = ",%sigma[0])$
print('%sigma[1]," = ",%sigma[1])$
print('%sigma[2]," = ",%sigma[2])$
print('%sigma[3]," = ",%sigma[3])$

print("Vector A in rectangular coordinates")$
Axyz : Ax*%sigma[1] + Ay*%sigma[2] + Az*%sigma[3];


print("_________________________________________________________")$
print("Pauli Matrices Definition Spherical")$
print("_________________________________________________________")$

ct : cos(theta)$
st : sin(theta)$

%sigma[r] : matrix([ct,st * %e^(-%i * phi)],[st * %e^(%i * phi),-ct])$
%sigma[theta] : matrix([-st,ct  * %e^(-%i * phi)],[ct * %e^(%i * phi),st])$
%sigma[phi] : matrix([0,-%i * %e^(-%i * phi)],[%i * %e^(%i * phi),0])$

print('%sigma[r]," = ",%sigma[r])$
print('%sigma[theta]," = ",%sigma[theta])$
print('%sigma[phi]," = ",%sigma[phi])$

A[x] : Ax$ 
A[y] : Ay$ 
A[z] : Az$ 

print("Dot multiplication with %sigma[r] allows to retrieve the r component")$
sr1 :A[x] * trigsimp(%sigma[r] . %sigma[1]) + A[y] * trigsimp(%sigma[r] . %sigma[2]) + A[z] * trigsimp(%sigma[r] . %sigma[3])  $
sr1 :trigsimp(sr1)$
Ar : factor(realpart(1/2 * (sr1[1,1]+sr1[2,2])))$
Ar : trigsimp(Ar)$
print('Ar," = ",Ar)$


print("Dot multiplication with %sigma[theta] allows to retrieve the theta component")$
sr1 :A[x] * trigsimp(%sigma[theta] . %sigma[1]) + A[y] * trigsimp(%sigma[theta] . %sigma[2]) + A[z] * trigsimp(%sigma[theta] . %sigma[3])  $
Atheta : ratsimp(factor(realpart(1/2 * (sr1[1,1]+sr1[2,2]))))$
Atheta : trigsimp(Atheta)$
print('Atheta," = ",Atheta)$


print("Dot multiplication with %sigma[phi] allows to retrieve the phi component")$
sr1 :A[x] * trigsimp(%sigma[phi] . %sigma[1]) + A[y] * trigsimp(%sigma[phi] . %sigma[2]) + A[z] * trigsimp(%sigma[phi] . %sigma[3])  $
Aphi : ratsimp(factor(realpart(1/2 * (sr1[1,1]+sr1[2,2]))))$
Aphi : trigsimp(Aphi)$
print('Aphi," = ",Aphi)$

print("_________________________________________________________")$
print("vector in spherical coordinates")$
print("_________________________________________________________")$
Asph : ratsimp(factor(Ar*%sigma[r]+Atheta*%sigma[theta]+Aphi*%sigma[phi]));

print("Try to find the difference with the cartesian representation")$
ratsimp(demoivre(Asph - Axyz));
print("There is no difference!")$
print("The vector representation with Pauli is independent from the coordinate system")$

print("bye")$
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
