/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: input   start ] */
kill(all);

/* Nabla_cyl */
print("Introduce functional dependence")$
depends([a11,a12,a21,a22],[%rho,phi,z]);

Ap : matrix([a11,a12],[a21,a22]); 

/*_________________________________________________*/
/* This part is the function that compute the nabla
of a Pauli matrix in cylindrical coordinates */

Nablacyl(Ap) := 
block([],

print("performing Nabla"),
emp : %e^(- %i * phi),
epp : %e^( %i * phi),

NAp11 : diff(Ap[1,1],z)+emp*diff(Ap[2,1],%rho)-%i*emp/%rho*diff(Ap[2,1],phi),
NAp12 : diff(Ap[1,2],z)+emp*diff(Ap[2,2],%rho)-%i*emp/%rho*diff(Ap[2,2],phi),
NAp21 :-diff(Ap[2,1],z)+epp*diff(Ap[1,1],%rho)+%i*epp/%rho*diff(Ap[1,1],phi),
NAp22 :-diff(Ap[2,2],z)+epp*diff(Ap[1,2],%rho)+%i*epp/%rho*diff(Ap[1,2],phi),

NAp11 : factor(NAp11),
NAp12 : factor(NAp12),
NAp21 : factor(NAp21),
NAp22 : factor(NAp22),

NAp : (matrix([NAp11, NAp12],[NAp21, NAp22]))
)$
/*_________________________________________________*/

print("_________________________________________________________")$
print("Pauli Matrices Rectangular")$
print("_________________________________________________________")$

%sigma[0] : matrix([1,0],[0,1])$
%sigma[1] : matrix([0,1],[1,0])$
%sigma[2] : matrix([0,-%i],[%i,0])$
%sigma[3] : matrix([1,0],[0,-1])$

print("_________________________________________________________")$
print("Pauli MatricesCylindrical")$
print("_________________________________________________________")$

%sigma[%rho] : matrix([0,%e^(-%i * phi)],[%e^(%i * phi),0])$
%sigma[phi] : matrix([0,-%i * %e^(-%i * phi)],[%i * %e^(%i * phi),0])$
%sigma[z] : matrix([1,0],[0,-1])$

depends([Arho,Aphi,Az],[%rho,phi,z]);
Arpz : Arho*%sigma[%rho] + Aphi * %sigma[phi] + Az * %sigma[z];

NArpz :Nablacyl(Arpz);

print("finding the divergence")$
divA : trigsimp(1/2*(NArpz[1,1]+NArpz[2,2]));

print("Now evaluating nabla wedge A")$

NwA : trigsimp(NArpz - divA * %sigma[0]);

print("_________________________________________________________")$
print("Second order")$
print("_________________________________________________________")$
NNArpz : Nablacyl(NArpz);

print("finding the scalar part")$
NdivA : trigsimp(1/2*(NNArpz[1,1]+NNArpz[2,2]));

print("finding the rho component")$
NNArho : NNArpz . %sigma[%rho]$
NNAr : trigsimp(1/2*(NNArho[1,1]+NNArho[2,2]));

print("finding the phi component")$
NNAphi : NNArpz . %sigma[phi]$
NNAp : trigsimp(1/2*(NNAphi[1,1]+NNAphi[2,2]));

print("finding the z component")$
NNAz : NNArpz . %sigma[3]$
NNAzz : trigsimp(1/2*(NNAz[1,1]+NNAz[2,2]));

print("end")$
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
