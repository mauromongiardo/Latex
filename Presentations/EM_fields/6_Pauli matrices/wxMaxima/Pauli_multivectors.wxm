/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: input   start ] */
kill(all)$
load(vect);
/* code name: Pauli_multivectors.wxm */

declare([a1,a2,a3],scalar)$
declare([B1,B2,B3],scalar)$
declare([a0,t],scalar)$

%sigma[0] : matrix([1,0],[0,1])$
%sigma[1] : matrix([0,1],[1,0])$
%sigma[2] : matrix([0,-%i],[%i,0])$
%sigma[3] : matrix([1,0],[0,-1])$

A :  a0 . %sigma[0] $
print("Scalar ",'a0," Pauli matrix ",A)$
a : a1 . %sigma[1] + a2 . %sigma[2] + a3 . %sigma[3]$
print("Vector ",'a," Pauli matrix ",a)$
B : %i * (B1 . %sigma[1] + B2 . %sigma[2] + B3 . %sigma[3])$
B : ratsimp(B)$
print("Bivector ",'B," Pauli matrix ",B)$
T : %i * t . %sigma[0] $
print("Pseudoscalar ",'t," Pauli matrix ",T)$

print("Multivector M")$
M : A + a + B + T ;

print("_________________________________________________________")$
print("Retrieving the elements of the multivector")$
print("for a given Pauli matrix")$
print("_________________________________________________________")$
print("real part")$
Mr : realpart(M);
print("imaginary part")$
Mi : imagpart(M);

a0r : 1/2*(Mr[1,1]+Mr[2,2])$
print('a0r," = ",a0r)$
a1r : 1/2*(Mr[1,2]+Mr[2,1])$
print('a1r," = ",a1r)$
a2r : 1/2*(Mi[2,1]-Mi[1,2])$
print('a2r," = ",a2r)$
a3r : 1/2*(Mr[1,1]-Mr[2,2])$
print('a3r," = ",a3r)$

B1r : 1/2*(Mi[1,2]+Mi[2,1])$
print('B1r," = ",B1r)$
B2r : 1/2*(-Mr[2,1]+Mr[1,2])$
print('B2r," = ",B2r)$
B3r : 1/2*(Mi[1,1]-Mi[2,2])$
print('B3r," = ",B3r)$
t0r : 1/2*(Mi[1,1]+Mi[2,2])$
print('t0r," = ",t0r)$

print("end")$
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
