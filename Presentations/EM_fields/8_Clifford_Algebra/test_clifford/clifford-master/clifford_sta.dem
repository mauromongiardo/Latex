/* Copyright (C) 2015 Dimiter Prodanov
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE.  See the GNU General Public License for more details.
 * 
 */

if get('clifford,'version)=false then load("clifford");

("Cliford implements Clifford algebra for Maxima.")$

("Space-time algebra")$
clifford(g,1,3);

("here are all elements of the algebra")$
elements();

("anticommutativity")$
g[2].g[1];

("Electric field vector")$
EE:cvect(E,[[],x,y,z]);

("Magnetic field vector")$
BB:cvect(B,[[],x,y,z]);

("Faraday multi-vector")$
F: EE + %iv.BB;

("Faraday multi-vector full simplification")$
F: F,expand, dotsimpc;

("pseudo-Euclidaen vector segment")$

mtable1([g[1],g[2],g[3],g[4]]);

("Quaternion segment")$
mtable1([g[1] . g[3] . g[4], g[1] . g[2] . g[4],g[1] . g[2] . g[3]]);

("space-time split")$
F1:F.g[1],expand,dotsimpc;

("Quaternion segment")$
mtable1([ g[3] . g[4], g[2] . g[4], g[2] . g[3]]);

("Euclidaen vector segment")$
mtable1([  g[1] . g[2], g[1] . g[3], g[1] . g[4]]);

("Full algebra")$
mtable2();

/* End of demo -- comment line needed by MAXIMA to resume demo menu */
